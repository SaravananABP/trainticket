plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.booking'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

//	implementation 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation group: 'com.h2database', name: 'h2', version: '2.2.220'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
	implementation 'com.google.code.gson:gson:2.8.8'
//	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
